#!/bin/python3

import psycopg2
import time
import sys
import traceback

def usage(e):
    print('', file=sys.stderr)
    print('Usage:', file=sys.stderr)
    print('  log_values [log|push] <path> [val1 val2 ...|query]', file=sys.stderr)
    print('', file=sys.stderr)
    exit(e)

def log(path, vals):
    with open(path, 'a') as f:
        print('\t'.join(vals), file=f)

def push(path, query):
    try:
        conn = psycopg2.connect(database="logs", host="192.168.1.99", port="5432", user="grafana", password="graf")
        cursor = conn.cursor()
        
        with open(path, 'r') as f:
            lines = f.read().split('\n')[:-1]
            for l in lines:
                sp = l.split('\t')
                q = query.format(*sp) # This is very safe, trust
                cursor.execute(q)
        conn.commit()
        with open(path, 'w') as f:
            pass
    except:
        with open(f'{path}_errors', 'a') as f:
            print(f"{time.time()}: {traceback.print_exc()}", file = f)

if len(sys.argv) < 4:
    usage(1)

if sys.argv[1] == 'log':
    log(f'/home/raiku/Misc/Log/{sys.argv[2]}', sys.argv[3:len(sys.argv)])
elif sys.argv[1] == 'push':
    push(f'/home/raiku/Misc/Log/{sys.argv[2]}', ' '.join(sys.argv[3:len(sys.argv)]))
else:
    usage(1)

